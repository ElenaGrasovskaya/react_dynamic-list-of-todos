{"version":3,"sources":["types/ShowType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ShowType","TodoList","todos","selectedTodo","onSelectedTodo","changeShowModal","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","onChangeShow","show","onChangeFilter","filter","value","onChange","event","target","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","loadedUser","TodoModal","useState","user","setUser","useEffect","userId","data","href","email","name","App","todosFromServer","setTodosFromServer","setShow","setFilter","setSelectedTodo","showModal","setShowModal","loaded","useRef","current","newFilter","newShow","todoCopy","lowerCaseFilter","toLowerCase","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ed4b50c.chunk.js","sourcesContent":["export enum ShowType {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectedTodo: (value: Todo | null) => void;\n  changeShowModal: (value: boolean) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectedTodo,\n  changeShowModal,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelectedTodo(todo);\n                  changeShowModal(true);\n                }}\n              >\n                <span className=\"icon\">\n                  {todo.id === selectedTodo?.id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { ShowType } from '../../types/ShowType';\n\ninterface Props {\n  show: ShowType;\n  filter: string;\n  onChangeShow: (value: ShowType) => void;\n  onChangeFilter: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeShow,\n  show,\n  onChangeFilter,\n  filter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={show}\n            onChange={(event) => onChangeShow(event.target.value as ShowType)}\n          >\n            <option value={ShowType.all}>All</option>\n            <option value={ShowType.active}>Active</option>\n            <option value={ShowType.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter}\n          onChange={(event) => onChangeFilter(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {filter && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"clear\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChangeFilter('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\r\nimport { User } from './types/User';\r\n\r\n// eslint-disable-next-line max-len\r\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\r\n\r\n// This function creates a promise\r\n// that is resolved after a given delay\r\nfunction wait(delay: number): Promise<void> {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction get<T>(url: string): Promise<T> {\r\n  // eslint-disable-next-line prefer-template\r\n  const fullURL = BASE_URL + url + '.json';\r\n\r\n  // we add some delay to see how the loader works\r\n  return wait(300)\r\n    .then(() => fetch(fullURL))\r\n    .then(res => res.json());\r\n}\r\n\r\nexport const getTodos = () => get<Todo[]>('/todos');\r\n\r\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\r\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo | null;\n  changeShowModal: (value: boolean) => void;\n  onSelectedTodo: (value: Todo | null) => void;\n}\n\nlet loadedUser = false;\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  changeShowModal,\n  onSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then((data: User) => {\n        loadedUser = true;\n        setUser(data);\n      });\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!loadedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                loadedUser = false;\n                changeShowModal(false);\n                onSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useRef } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { ShowType } from './types/ShowType';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [show, setShow] = useState<ShowType>(ShowType.all);\n  const [filter, setFilter] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [showModal, setShowModal] = useState(false);\n  const loaded = useRef(false);\n\n  useEffect(() => {\n    getTodos().then((value) => {\n      setTodosFromServer(value);\n    });\n    loaded.current = true;\n  }, []);\n\n  function onChangeShow(value: ShowType) {\n    setShow(value);\n  }\n\n  function onChangeFilter(value: string) {\n    setFilter(value);\n  }\n\n  function getFilteredTodos(newFilter:string, newShow:ShowType) {\n    let todoCopy: Todo[] = [...todosFromServer];\n    const lowerCaseFilter = newFilter.toLowerCase();\n\n    if (newShow === ShowType.active) {\n      todoCopy = todosFromServer.filter((todo) => !todo.completed);\n    }\n\n    if (newShow === ShowType.completed) {\n      todoCopy = todosFromServer.filter((todo) => todo.completed);\n    }\n\n    if (newShow === ShowType.all) {\n      todoCopy = [...todosFromServer];\n    }\n\n    return todoCopy.filter((todo) => todo.title.toLowerCase().includes(lowerCaseFilter));\n  }\n\n  const todos = getFilteredTodos(filter, show);\n\n  function onSelectedTodo(value: Todo | null) {\n    setSelectedTodo(value);\n  }\n\n  function changeShowModal(value: boolean) {\n    setShowModal(value);\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                show={show}\n                filter={filter}\n                onChangeShow={() => onChangeShow}\n                onChangeFilter={() => onChangeFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!loaded.current && <Loader />}\n              <TodoList\n                todos={todos}\n                selectedTodo={selectedTodo}\n                onSelectedTodo={() => onSelectedTodo}\n                changeShowModal={() => changeShowModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {showModal && selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelectedTodo={() => onSelectedTodo}\n          changeShowModal={() => changeShowModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}